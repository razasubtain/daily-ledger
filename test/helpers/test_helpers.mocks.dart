// Mocks generated by Mockito 5.4.2 from annotations
// in digi_app/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:digi_app/models/customer_model.dart' as _i2;
import 'package:digi_app/models/transaction_model.dart' as _i9;
import 'package:digi_app/models/wallet_model.dart' as _i11;
import 'package:digi_app/services/customer_service.dart' as _i8;
import 'package:digi_app/services/url_launcher_service.dart' as _i12;
import 'package:digi_app/services/wallet_service.dart' as _i10;
import 'package:flutter/material.dart' as _i5;
import 'package:hive/hive.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked_services/stacked_services.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomer_0 extends _i1.SmartFake implements _i2.Customer {
  _FakeCustomer_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_1<E> extends _i1.SmartFake implements _i3.Box<E> {
  _FakeBox_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i4.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i5.GlobalKey<_i5.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i5.GlobalKey<_i5.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i4.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<T?>? navigateWithTransition<T>(
    _i5.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i5.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWithTransition<T>(
    _i5.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i5.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i5.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i5.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? navigateToView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i5.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i4.Transition? transition,
    _i4.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i5.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearStackAndShowView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? clearTillFirstAndShowView<T>(
    _i5.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
  @override
  _i6.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i5.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i4.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i4.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<dynamic>?>);
  @override
  _i6.Future<_i4.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.SheetResponse<T>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<T>?>);
  @override
  void completeSheet(_i4.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i4.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i4.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i5.Widget Function(
      _i5.BuildContext,
      _i4.DialogRequest<dynamic>,
      dynamic Function(_i4.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i7.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i7.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  _i6.Future<_i4.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.DialogResponse<T>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<T>?>);
  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i7.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i7.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i4.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CustomerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerService extends _i1.Mock implements _i8.CustomerService {
  @override
  List<_i9.Transaction> get todayTransactions => (super.noSuchMethod(
        Invocation.getter(#todayTransactions),
        returnValue: <_i9.Transaction>[],
        returnValueForMissingStub: <_i9.Transaction>[],
      ) as List<_i9.Transaction>);
  @override
  set todayTransactions(List<_i9.Transaction>? _todayTransactions) =>
      super.noSuchMethod(
        Invocation.setter(
          #todayTransactions,
          _todayTransactions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get todayCashIn => (super.noSuchMethod(
        Invocation.getter(#todayCashIn),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set todayCashIn(double? _todayCashIn) => super.noSuchMethod(
        Invocation.setter(
          #todayCashIn,
          _todayCashIn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get todayCashOut => (super.noSuchMethod(
        Invocation.getter(#todayCashOut),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set todayCashOut(double? _todayCashOut) => super.noSuchMethod(
        Invocation.setter(
          #todayCashOut,
          _todayCashOut,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get customerTotalCashIn => (super.noSuchMethod(
        Invocation.getter(#customerTotalCashIn),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set customerTotalCashIn(double? _customerTotalCashIn) => super.noSuchMethod(
        Invocation.setter(
          #customerTotalCashIn,
          _customerTotalCashIn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get customerTotalCashOut => (super.noSuchMethod(
        Invocation.getter(#customerTotalCashOut),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set customerTotalCashOut(double? _customerTotalCashOut) => super.noSuchMethod(
        Invocation.setter(
          #customerTotalCashOut,
          _customerTotalCashOut,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Customer get customer => (super.noSuchMethod(
        Invocation.getter(#customer),
        returnValue: _FakeCustomer_0(
          this,
          Invocation.getter(#customer),
        ),
        returnValueForMissingStub: _FakeCustomer_0(
          this,
          Invocation.getter(#customer),
        ),
      ) as _i2.Customer);
  @override
  set customer(_i2.Customer? _customer) => super.noSuchMethod(
        Invocation.setter(
          #customer,
          _customer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i2.Customer> get customerList => (super.noSuchMethod(
        Invocation.getter(#customerList),
        returnValue: <_i2.Customer>[],
        returnValueForMissingStub: <_i2.Customer>[],
      ) as List<_i2.Customer>);
  @override
  set customerList(List<_i2.Customer>? _customerList) => super.noSuchMethod(
        Invocation.setter(
          #customerList,
          _customerList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get totalCashDifference => (super.noSuchMethod(
        Invocation.getter(#totalCashDifference),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set totalCashDifference(double? _totalCashDifference) => super.noSuchMethod(
        Invocation.setter(
          #totalCashDifference,
          _totalCashDifference,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get textByCashInCashOut => (super.noSuchMethod(
        Invocation.getter(#textByCashInCashOut),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set textByCashInCashOut(String? _textByCashInCashOut) => super.noSuchMethod(
        Invocation.setter(
          #textByCashInCashOut,
          _textByCashInCashOut,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Box<dynamic> get customerBox => (super.noSuchMethod(
        Invocation.getter(#customerBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#customerBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#customerBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get transactionBox => (super.noSuchMethod(
        Invocation.getter(#transactionBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#transactionBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#transactionBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get todayTransactionBox => (super.noSuchMethod(
        Invocation.getter(#todayTransactionBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#todayTransactionBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#todayTransactionBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get walletBox => (super.noSuchMethod(
        Invocation.getter(#walletBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#walletBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#walletBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  String get todayTransactionData => (super.noSuchMethod(
        Invocation.getter(#todayTransactionData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get customerData => (super.noSuchMethod(
        Invocation.getter(#customerData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get walletData => (super.noSuchMethod(
        Invocation.getter(#walletData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  dynamic deleteCustomer(String? customerId) => super.noSuchMethod(
        Invocation.method(
          #deleteCustomer,
          [customerId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic deleteTransaction(
    String? customerId,
    String? transactionId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #deleteTransaction,
          [
            customerId,
            transactionId,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic getCustomer(String? customerId) => super.noSuchMethod(
        Invocation.method(
          #getCustomer,
          [customerId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic addNewTransaction(
    String? customerId,
    _i9.Transaction? newTransaction,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addNewTransaction,
          [
            customerId,
            newTransaction,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic calculateCustomerCashInOut(String? customerId) => super.noSuchMethod(
        Invocation.method(
          #calculateCustomerCashInOut,
          [customerId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic editTransaction(
    String? transactionId,
    _i9.Transaction? transaction,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #editTransaction,
          [
            transactionId,
            transaction,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic editCustomerInformation({
    String? image = r'',
    String? customerName = r'',
    String? customerBusiness = r'',
    String? customerLedgerNo = r'',
    String? customerphoneNumber = r'',
    String? customerCity = r'',
    String? customerId = r'',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #editCustomerInformation,
          [],
          {
            #image: image,
            #customerName: customerName,
            #customerBusiness: customerBusiness,
            #customerLedgerNo: customerLedgerNo,
            #customerphoneNumber: customerphoneNumber,
            #customerCity: customerCity,
            #customerId: customerId,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletService extends _i1.Mock implements _i10.WalletService {
  @override
  List<_i11.Wallet> get walletList => (super.noSuchMethod(
        Invocation.getter(#walletList),
        returnValue: <_i11.Wallet>[],
        returnValueForMissingStub: <_i11.Wallet>[],
      ) as List<_i11.Wallet>);
  @override
  set walletList(List<_i11.Wallet>? _walletList) => super.noSuchMethod(
        Invocation.setter(
          #walletList,
          _walletList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get firstWalletId => (super.noSuchMethod(
        Invocation.getter(#firstWalletId),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.Box<dynamic> get customerBox => (super.noSuchMethod(
        Invocation.getter(#customerBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#customerBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#customerBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get transactionBox => (super.noSuchMethod(
        Invocation.getter(#transactionBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#transactionBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#transactionBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get todayTransactionBox => (super.noSuchMethod(
        Invocation.getter(#todayTransactionBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#todayTransactionBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#todayTransactionBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i3.Box<dynamic> get walletBox => (super.noSuchMethod(
        Invocation.getter(#walletBox),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#walletBox),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#walletBox),
        ),
      ) as _i3.Box<dynamic>);
  @override
  String get todayTransactionData => (super.noSuchMethod(
        Invocation.getter(#todayTransactionData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get customerData => (super.noSuchMethod(
        Invocation.getter(#customerData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get walletData => (super.noSuchMethod(
        Invocation.getter(#walletData),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  dynamic deleteWallet(String? walletId) => super.noSuchMethod(
        Invocation.method(
          #deleteWallet,
          [walletId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UrlLauncherService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherService extends _i1.Mock
    implements _i12.UrlLauncherService {}
